## FragmentShader Shader ##
#=
:: mandatory
>> fragment data generated by the rasterizer
   execute for each fragment(pixel)
   determines the appropriate fragment’s color for the pixel and depth values are computed
<< processed fragment data
=#

# Note that you may need to modify the version number(e.g. 410 here) to fit your specific case.

cube♡f = """#version 410 core
            // 'in's
            // interface block
            in CubeColor
            {
                vec4 color;
            } cubecolor;

            // 'out's
            out vec4 color;

            void main(void)
            {
                color = cubecolor.color;
            }"""




